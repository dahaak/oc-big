{"name":"OC-Big","tagline":"Automatically exported from code.google.com/p/oc-big","body":"**OC-Big** is an open source software extension for the electronic data capture system *!OpenClinica* (https://www.openclinica.com/) and has been developed at the Department of Medical Informatics, Uniklinik RWTH Aachen, Germany. OC-Big aims at enriching !OpenClinica by a new module for convenient and context-related data integration of large volume files into electronic case report forms (eCRFs). OC-Big is developed using !JavaScript (JQuery) and PHP, and is based on other open source projects, namely jQuery File Upload ([http://blueimp.github.io/jQuery-File-Upload/](http://blueimp.github.io/jQuery-File-Upload/)) and zip.js ([http://gildas-lormeau.github.io/zip.js/](http://gildas-lormeau.github.io/zip.js/)).\r\n\r\n\r\n# Features\r\n * Upload of large volume date (only limited by server’s storage space)\r\n * Chunking of data files into multiple parts to exceed browser’s upload limit of 4 GB\r\n * Support of multiple selection of files and queue processing\r\n * User-friendly drag & drop support\r\n * Data storage with unique filenames including study, event and subject context\r\n * Automatic compression and decompression for transfer (optional)\r\n * Not affected by !OpenClinica’s session timeout\r\n * Easy to integrate in and configure through eCRFs\r\n\r\n# Installation Guide\r\n\r\n## System Requirements\r\nThe following system requirements represent the system configuration of our server. In general, it should also work with similar components.\r\n\r\n * Web server (e.g. Debian GNU/Linux 6.0)\r\n * !OpenClinica 3.1.2 with requirements, e.g. PostreSQL, Tomcat (probably newer !OpenClinica versions also working, but not tested yet)\r\n * Apache 2\r\n * PHP 5 (with PECL Zip 1.10.2)\r\n * Apache Tomcat Connector (mod_jk)\r\n * Web browser, tested with Firefox >19 and Google Chrome >26 (Last tested: Firefox 34.0.5, Chrome 39.0.2171.95m)\r\n\r\n## Installation\r\n*1. Install !OpenClinica*\r\n\r\nIf not already done, install !OpenClinica with all requirements. Installation guides for Linux/Windows can be found here https://docs.openclinica.com/installation. The following manual is based on a Linux (Debian) installation of !OpenClinica.\r\n\r\n*2. Install Apache*\r\n\r\nPointing the web browser to http://localhost/ takes us to the default apache page confirming that apache has been installed. If not, the command \r\n\r\n{{{aptitude install apache2}}} \r\n\r\nwill catch apache2 from the debian packages and install it. \r\n\r\n*3. Install Apache Tomcat Connector*\r\n\r\nApache has to communicate with Tomcat. For this, the Apache Tomcat Connector has to be installed and its _jk.conf_ file edited. A manual can be found here: http://tomcat.apache.org/connectors-doc/.\r\n\r\n*4. Install PHP*\r\n\r\nPHP5 is required for OC-Big to process transferred files on server side. This can be installed along with the php apache module by\r\n\r\n{{{aptitude install php5 libapache2-mod-php5}}}\r\n\r\nAfter this, a server restart must be done\r\n\r\n{{{/etc/init.d/apache2 restart}}} \r\n\r\n\r\n*5. Install PHP Zip Extension*\r\n\r\nZip functionality is not usually enabled with standard php installations. To check if the zip functionality is enabled, the _phpinfo()_ function can be used. PHP's zip functionality has to be enabled by \r\n\r\n # compiling php with the _--enable-zip_ option OR \r\n # install it via PECL, e.g. install PECL, modify the _php.ini_ file and uncomment zip.so. \r\n\r\n*6. Extract oc-big-111.zip to a temporary folder*\r\n\r\nThe zip file contains the directories\r\n * bin: PHP modules\r\n * css: Cascading Style Sheets (CSS) files for design\r\n * images: Images used in user interface\r\n * js: Used Javascript libraries\r\n * lib: Original source code of used projects and libraries\r\n * openclinica: !OpenClinica files including _OC-Big.xls_ as demo eCRF\r\n * server: Server side PHP code to process transferred files\r\n * templates: HTML templates for client side\r\n\r\n\r\n*7. Copy contents on server*\r\n\r\nCopy the complete content of oc-big-111.zip into a folder in your Apache's default document root directory (e.g /var/www/oc-big-111/).\r\n\r\n*8. Configure mod_jk*\r\n\r\nAdd your oc-big-111 folder to the _jk.conf_ file of mod_jk with the following statement:\r\n\r\n{{{JkUnMount /oc-big-111/* ajp13_worker}}}\r\n\r\nAfter this, restart apache again:\r\n\r\n{{{/etc/init.d/apache2 restart}}} \r\n\r\n*8. Set folder permissions*\r\n\r\nIn the directories /server/php/ and /mnt/data/openclinica/ the transferred files are stored, so these directories need write permissions (777).\r\n\r\n*9. Copy Pop-Up call script into your !OpenClinica Tomcat folder*\r\n\r\nThe script /openclinica/showImageUpload.js has to be copied into your !OpenClinica Tomcat folder. After a backup, create a folder (e.g. /javascripts/) inside the !OpenClinica webapp folder and copy the script file here. This script has to be available inside Tomcat, because it is called from !OpenClinica itself.\r\n\r\n*10. Customize eCRF*\r\n\r\nOpen the /openclinica/OC-Big.xls sample eCRF and modify it. Here a sample integration for image upload into the eCRF is already available. An overview of the parameters, which can be generally set in the eCRF is given below.\r\n\r\n*11. Install eCRF*\r\n\r\nInstall the eCRF as usual in !OpenClinica.\r\n\r\n*12. Ready!*\r\n\r\n## Settings\r\nOC-Big can be configured directly in the eCRF by modification of the upload button tag. In the sample eCRF it is as follows:\r\n\r\n`<span class=\"uploadButton\" widthQ=\"240px\" fileType=\"png\" fileCount=\"1\" imgWidth=\"240px\" imgFloat=\"right\" imgDefault=\"/openclinica/crfImages/default.png\" apacheBD=\"oc-big-111\" savePath=\"//mnt/data/openclinica/\"  token=\"test1234!\"/>`\r\n\r\nYou can modify the following parameters to adapt OC-Big to your needs:\r\n\r\n * *fileType:* Allowed file types for upload. Multiple types can be seperated by comma (e.g. jpg, png). *Note:* On changing this you currently also have to adapt the _content-type_ in the _download.php_ file to get downloads working as well.\r\n * *fileCount:* Maximum number of allows files.  \r\n * *imgDefault:* Location of default image showed in the eCRF beside of the OC-Big button.\r\n * *apacheBD:* Name of the OC-Big instance, which is used. If your OC-Big code is in a folder named \"oc-big-111\" (as described in the manual), \"oc-big-111\" has to be set here.\r\n * *savePath:* Path where transferred files are finally stored. *Note:* On changing this you currently also have to adapt the _savePath_ in _settings.php_ and (perhaps) the extraction of the filenames in _download.php_.\r\n * *token:* Token to avoid calls of OC-Big from outside the eCRF. The token value in the eCRF and in _settings.php_ have to be the same. The longer this value, the lower the risk of unwanted OC-Big calls from outside. *Note:* Please change the token value before integration. ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}